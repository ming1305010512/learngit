<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--导入applicationContext.xml-->
    <import resource="classpath:config/spring/applicationContext.xml"/>

    <!--处理器,可以直接用扫描组件-->
    <context:component-scan base-package="com.lm.controller"/>
    <!--&lt;!&ndash;注解映射器&ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
    <!--&lt;!&ndash;注解的适配器&ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

    <mvc:annotation-driven validator="validator" conversion-service="conversionService"></mvc:annotation-driven>
    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--添加前缀和后缀-->
        <property name="suffix" value=".jsp"></property>
        <property name="prefix" value="/WEB-INF/"></property>
    </bean>

    <!--自定义参数绑定时的类型转化-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--转换器-->
        <property name="converters">
            <set>
                <!--日期类型转换-->
                <bean class="com.lm.controller.converter.CustomDateConverter"/>
            </set>
        </property>
    </bean>

    <!--配置校验器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--所使用的校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!--指定校验使用的资源文件，没有指定，默认使用classpath下的ValidationMessages.properties文件-->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!--校验错误信息配置文件-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!--资源文件名-->
        <property name="basenames">
            <list>
                <value>ValidationMessages</value>
            </list>
        </property>
        <!--指定文件编码格式-->
        <property name="fileEncodings" value="utf-8"/>
        <!--对资源文件内容的缓存时间-->
        <property name="cacheSeconds" value="120"/>
    </bean>

    <!--文件上传-->
    <!--
    如果表单中定义了enctype="multipart/form-data",必须配置该bean，否则springmvc的数据
    绑定会失效
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置文件的最大上传尺寸：5M-->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!--mapping:表示以/js/开头的所有请求
        location:表示webapp包下的js包下的文件
    -->
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>
    <mvc:resources mapping="/uploadFile/**" location="/uploadFile/"></mvc:resources>


    <!--拦截器的配置-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash;path:表示映射的请求，这里表示接收所有请求&ndash;&gt;-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.lm.interceptor.LoginInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

</beans>